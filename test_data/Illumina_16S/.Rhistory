library('dada2')
install.packages("Rcpp" ,repos = "http://cran.us.r-project.org")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager" ,repos = "http://cran.us.r-project.org")
BiocManager::install("dada2", version = "3.10")
install.packages("Rcpp", repos = "http://cran.us.r-project.org")
installr: install.packages("installr")
install.packages("installr")
library(installr)
updateR()
install.packages("Rcpp" ,repos = "http://cran.us.r-project.org")
install.packages("Rcpp" ,repos = "http://cran.us.r-project.org")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager" ,repos = "http://cran.us.r-project.org")
getwd()
setwd("C:C:/Users/m_4_r/Documents")
setwd("C:\Users\m_4_r\Desktop\materializeDEMO\pipecraft-quick-start\test_data\Illumina_16S")
setwd("C:/Users/m_4_r/Desktop/materializeDEMO/pipecraft-quick-start/test_data/Illumina_16S")
getwd()
list.files(pattern = "fastq")
files = list.files(pattern = "fastq")
library()
library('dada2')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.10")
R
R.version
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.10")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2")
libary('dada2')
library('dada2')
out <- filterAndTrim(files[0], filtFs, truncLen=240,
maxN=0, maxEE=2, truncQ=2,)
out <- filterAndTrim(files[0], filtFs, truncLen=240,maxN=0, maxEE=2, truncQ=2,)
filtFs = files[0] + 'out'
filtFs = files[0]  'out'
filtFs = paste(files[0] ,'out', sep = '')
files[0]
files[1]
filtFs = paste(files[1] ,'out', sep = '')
out <- filterAndTrim(files[1], filtFs, truncLen=240,
maxN=0, maxEE=2, truncQ=2,)
out <- filterAndTrim(files[1], filtFs, truncLen=240,
maxN=0, maxEE=2, truncQ=2, ,)
out <- filterAndTrim(files[1], filtFs, ,truncLen=240,
maxN=0, maxEE=2, truncQ=2, , ,)
out <- filterAndTrim(files[1], filtFs,truncLen=240,
maxN=0, maxEE=2, truncQ=2)
head(out)
readRenviron('C:\Users\m_4_r\Desktop\materializeDEMO\pipecraft-quick-start\env_files\dada2-quality-filter.env')
readRenviron('C:/Users/m_4_r/Desktop/materializeDEMO/pipecraft-quick-start/env_files/dada2-quality-filter.env')
truncQ
Sys.getenv('truncLen')
truncLen = Sys.getenv('truncLen')
truncQ = Sys.getenv('truncQ')
maxLen = Sys.getenv('maxLen')
minLen = Sys.getenv('minLen')
maxEE = Sys.getenv('maxEE')
maxN = Sys.getenv('maxN')
minQ = Sys.getenv('minQ')
input = list.files(pattern = "fastq")
for (fastq in input)
{
input = fastq
output = paste('/input/dada2-quality-filter-output/',fastq, sep="")
out <- filterAndTrim(input, output, truncLen, maxN, maxEE, truncQ, minLen, minQ, maxLen)
head(out)
}
for (fastq in input)
{
input = fastq
output = paste('/input/dada2-quality-filter-output/',fastq, sep="")
out <- filterAndTrim(input, 'midaiganes', truncLen, maxN, maxEE, truncQ, minLen, minQ, maxLen)
head(out)
}
for (fastq in input)
{
cat fastq
}
for (fastq in input)
{
cat fastq
}
cat fastq
head fastq
head(fastq)
for (fastq in input)
{
head(fastq)
}
for (fastq in input)
{
head(fastq)
}
for (fastq in input)
{
head(fastq)
}
input = list.files(pattern = "fastq")
for (fastq in input)
{
head(fastq)
}
for (fastq in input)
{
print(fastq)
}
input = list.files(pattern = "fastq")
for (fastq in input)
{
output = paste('/input/dada2-quality-filter-output/',fastq, sep="")
out <- filterAndTrim(fastq, output, rev = NULL, filt.rev = NULL, truncLen, maxN, maxEE, truncQ, minLen, minQ, maxLen)
print(fastq)
head(out)
}
input = list.files(pattern = "fastq")
for (fastq in input)
{
output = paste('/input/dada2-quality-filter-output/',fastq, sep="")
out <- filterAndTrim(fastq, output, rev = NULL, filt.rev = NULL, truncLen, maxN, maxEE, minLen, minQ)
print(fastq)
head(out)
}
input = list.files(pattern = "fastq")
for (fastq in input)
{
output = paste('/input/dada2-quality-filter-output/',fastq, sep="")
out <- filterAndTrim(fastq, output, rev = NULL, filt.rev = NULL, truncLen, maxN, maxEE, minLen, minQ)
head(out)
}
input = list.files(pattern = "fastq")
for (fastq in input)
{
print(fastq)
output = paste('/input/dada2-quality-filter-output/',fastq, sep="")
out <- filterAndTrim(fastq, output, rev = NULL, filt.rev = NULL, truncLen, maxN, maxEE, minLen, minQ)
head(out)
}
input = list.files(pattern = "fastq")
for (fastq in input)
{
print(fastq)
output = paste('/input/dada2-quality-filter-output/',fastq, sep="")
out <- filterAndTrim(fastq, output, rev = NULL, filt.rev = NULL, minLen = 20)
head(out)
}
View(out)
input = list.files(pattern = "fastq")
for (fastq in input)
{
print(fastq)
output = paste('dada2-quality-filter-output/',fastq, sep="")
out <- filterAndTrim(fastq, output, rev = NULL, filt.rev = NULL, minLen = 20)
head(out)
}
View(out)
input = list.files(pattern = "fastq")
for (fastq in input)
{
print(fastq)
output = paste('out',fastq, sep="")
print(output)
filterAndTrim(fastq, output, rev = NULL, filt.rev = NULL, maxN = 0, minQ = 0, truncLen = 0, maxEE = 1, minLen = 200)
head(out)
}
plotQualityProfile(fnFs[1:4])
plotQualityProfile(input[1:4])
filtFs <- file.path(input)
fnFs <- sort(list.files(pattern="_R1_001.fastq", full.names = TRUE))
fnRs <- sort(list.files(pattern="_R2_001.fastq", full.names = TRUE))
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
fnFs <- sort(list.files(pattern="_R1_001.fastq", full.names = TRUE))
fnRs <- sort(list.files(pattern="_R2_001.fastq", full.names = TRUE))
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
filtFs <- file.path(path, "filtered", paste0(sample.names, "_F_filt.fastq.gz"))
filtRs <- file.path("filtered", paste0(sample.names, "_R_filt.fastq.gz"))
filtFs <- file.path("filtered", paste0(sample.names, "_F_filt.fastq.gz"))
names(filtFs) <- sample.names
names(filtRs) <- sample.names
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(240,160),
maxN=0, maxEE=c(2,2), truncQ=2)
out <- filterAndTrim(fnFs, filtFs, truncLen=c(240,160),
maxN=0, maxEE=c(2,2), truncQ=2)
out <- filterAndTrim(fnFs, filtFs, truncLen=240,
maxN=0, maxEE=2, truncQ=2)
output = paste('/input/dada2-quality-filter-output/',input, sep="", full.names = TRUE)
output
output = paste('/input/dada2-quality-filter-output/',input, sep="")
output
